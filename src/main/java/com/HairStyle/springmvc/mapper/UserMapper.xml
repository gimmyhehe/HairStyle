<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.HairStyle.springmvc.dao.IUserDao">
	<resultMap id="BaseResultMap" type="com.HairStyle.springmvc.model.User">
  		<id property="user_id" column="user_id" />
		<result column="user_name" property="user_name" />
		<result column="password" property="password" />
		<result column="email" property="email" />
		<result column="gender" property="gender" />
		<result column="birth_date" property="birth_date" />
		<result column="phone_area" property="phone_area" />
		<result column="phone_number" property="phone_number" />
		<result column="face_type" property="face_type" />
		<result column="career" property="career" />
		<result column="create_time" property="create_time" />
		<result column="country" property="country" />
		<result column="province" property="province" />
		<result column="area" property="area" />
		<result column="user_type" property="user_type" />
	</resultMap>
<<<<<<< HEAD
	
	<resultMap id="WithUser_PicResultMap" type="com.HairStyle.springmvc.model.User">
  		<id property="user_id" column="user_id" />
		<result column="user_name" property="user_name" />
		<result column="password" property="password" />
		<result column="email" property="email" />
		<result column="gender" property="gender" />
		<result column="birth_date" property="birth_date" />
		<result column="phone_area" property="phone_area" />
		<result column="phone_number" property="phone_number" />
		<result column="face_type" property="face_type" />
		<result column="career" property="career" />
		<result column="create_time" property="create_time"  />
		<result column="country" property="country" />
		<result column="province" property="province" />
		<result column="area" property="area" />
		<result column="user_type" property="user_type" />
		<association property="company" column="company_id" javaType="com.HairStyle.springmvc.model.Company" resultMap="CompanyMap"/>
		<association property="user_pic" column="pic_id" javaType="com.HairStyle.springmvc.model.User_Pic" resultMap="User_PicMap"/>		
	</resultMap>
	
	<resultMap id="User_PicMap" type="com.HairStyle.springmvc.model.User_Pic">
		<id property="pic_id" column="pic_id"/>
		<result column="user_pic_dir" property="user_pic_dir"/>
	</resultMap>
	
	<resultMap id="CompanyMap" type="com.HairStyle.springmvc.model.Company">
		<id property="company_id" column="company_id"/>
	</resultMap>

		

=======
>>>>>>> 463aca1a58acb90118fd10d7d325fe8e6bbb56ca


	<!--用户登录 -->
	<select id="loginDao" parameterType="java.util.Map" resultMap="WithUser_PicResultMap">
		SELECT
		user.*,user_pic.*,company.company_id
		FROM
		(user,user_pic)
		left join company on company.company_user_id=user.user_id
		WHERE
		user.user_name=#{user_name} and user.user_id=user_pic.uploader_id
		and user.password=#{password}
	</select>
	
	<!--用户注册 -->
	<insert id="registerDao" parameterType="java.util.Map">
		insert into user (user_id,user_name,password,email,gender,birth_date,phone_area,phone_number,face_type,career,create_time,country,province,area,user_type)
		VALUES
		(#{user_id},#{user_name},#{password},#{email},#{gender},#{birth_date},
		#{phone_area},#{phone_number},#{face_type},#{career},#{create_time},#{country},#{province},#{area},#{user_type})	
	</insert>
	
	<!-- 查找重复 -->
	<select id="findUsersByUsernameDao" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from user
		where user_name=#{user_name}
	</select>
	<select id="findUsersByPhoneDao" parameterType="java.util.Map" resultType="java.lang.Integer">
		select COUNT(*) from user
		where phone_area=#{phone_area} AND phone_number=#{phone_number} 
		and not exists
		(select * from user where user_id=#{user_id})
	</select>
	<select id="findUsersByEmailDao" parameterType="java.util.Map" resultType="java.lang.Integer">
		select COUNT(*) 
		FROM 
		user
		WHERE 
		email=#{email,jdbcType=VARCHAR} and not exists
		(select * from user where user_id=#{user_id})
	</select>
	
	<!--修改资料 -->
	<update id="modifyPasswordByUsernameDao"  parameterType="java.util.Map" >
		update user set password=#{password} where user_name=#{user_name}
	</update>
	
	<update id="modifyUser_dataByUserIDDao" parameterType="java.util.Map" >
		update user set email=#{email},gender=#{gender},birth_date=#{birth_date},
		phone_area=#{phone_area},phone_number=#{phone_number},face_type=#{face_type},career=#{career},
		country=#{country},province=#{province},area=#{area}
		where user_ID=#{user_ID}			
	</update>

	<!-- 获取用户个人资料 -->
	<select id="get_user_dataDao" parameterType="java.lang.String" resultMap="WithUser_PicResultMap">
		select
		u.user_id as user_id,
		u.user_name as user_name,
		u.gender as gender,
		u.email as email,
		u.birth_date as birth_date,
		u.face_type as face_type,
		u.phone_area as phone_area,
		u.phone_number as phone_number,
		u.career as career,
		u.create_time as create_time,
		u.country as country,
		u.province as province,
		u.area as area,
		u.user_type as user_type,
		p.pic_id as pic_id, 
		p.user_pic_dir as user_pic_dir 
		from user u left outer join user_pic p on u.user_id=p.uploader_id
		WHERE
		u.user_name=#{user_name} and p.is_active=1
	</select>


	<!--上传新图像-->
	<insert id="upload_new_user_picDao" parameterType="java.util.Map">
		insert into user_pic (pic_id,uploader_id,is_active,pic_date,user_pic_dir)
		VALUES
		(#{pic_id},#{uploader_id},1,#{pic_date},#{user_pic_dir})	
	</insert>
	
	<update id="set_user_old_picDao" parameterType="java.lang.String">
		update user_pic set is_active=0 where uploader_id=#{uploader_id} and is_active=1 	
	</update>
</mapper>  