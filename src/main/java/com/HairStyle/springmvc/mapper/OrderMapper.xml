<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.HairStyle.springmvc.dao.IOrderDao">

	<resultMap id="OrderByUserResultMap" type="com.HairStyle.springmvc.model.User">
		<id property="user_id" column="user_id" />
		<result column="user_name" property="user_name" />
		<collection property="order" javaType="java.util.List" ofType="com.HairStyle.springmvc.model.Order">
			<id property="order_id" column="order_id" />
			<result column="order_price" property="order_price" />
			<result column="product_amount" property="product_amount" />
			<result column="order_create_time" property="order_create_time" />
			<result column="order_finish_time" property="order_finish_time" />
			<result column="is_active" property="is_active" />
			<result column="is_common" property="is_common" />
			<association property="product" column="product_id" javaType="com.HairStyle.springmvc.model.Product" resultMap="ProductMap"/>
        </collection>
	</resultMap>
	
	<resultMap id="OrderByCompanyResultMap" type="com.HairStyle.springmvc.model.Company">
		<id property="company_id" column="company_id" />
		<result column="company_name" property="company_name" />
		<collection property="product" javaType="java.util.List" ofType="com.HairStyle.springmvc.model.Product">
			<id property="product_id" column="product_id"/>
			<result column="product_name" property="product_name"/>
			<result column="product_price" property="product_price"/>
			<collection property="order" javaType="java.util.List" ofType="com.HairStyle.springmvc.model.Order">
				<id property="order_id" column="order_id" />
				<result column="order_price" property="order_price" />
				<result column="product_amount" property="product_amount" />
				<result column="order_create_time" property="order_create_time" />
				<result column="order_finish_time" property="order_finish_time" />
				<result column="is_active" property="is_active" />
				<result column="is_common" property="is_common" />
			<association property="user" column="user_id" javaType="com.HairStyle.springmvc.model.User" resultMap="UserMap"/>
        	</collection>
        </collection>
	</resultMap>
	
	<resultMap id="ProductMap" type="com.HairStyle.springmvc.model.Product">
		<id property="product_id" column="product_id"/>
		<result column="product_name" property="product_name"/>
		<result column="product_price" property="product_price"/>
		<association property="company" column="company_id" javaType="com.HairStyle.springmvc.model.User_Pic" resultMap="CompanyMap"/>
	</resultMap>
	
	<resultMap id="CompanyMap" type="com.HairStyle.springmvc.model.Company">
		<id property="company_id" column="company_id"/>
		<result column="company_name" property="company_name"/>
	</resultMap>
	
	<resultMap id="UserMap" type="com.HairStyle.springmvc.model.User">
		<id property="user_id" column="user_id"/>
		<result column="user_name" property="user_name"/>
	</resultMap>
	
	<!--创建订单 -->
	<insert id="makeorderDao" parameterType="com.HairStyle.springmvc.model.Order">
		insert into order (order_id,order_product_id,order_user_id,product_amount,order_price,order_create_time,is_common,is_active)
		VALUES
		(#{order_id},#{order_product_id},#{order_user_id},#{product_amount},#{order_price},#{order_create_time},0,1)	
	</insert>
	
	<!-- 完成订单 -->
	<update id="completeorderDao" parameterType="java.util.Map">
		update order set order_finish_time=#{order_finish_time} where order_id=#{order_id}
	</update>
	
	<!-- 取消订单 -->
	<update id="cancelorderDao" parameterType="java.lang.String">
		update order set is_active=0 where order_id=#{order_id}
	</update>
	
	<select id="findorderbyuser_idDao" parameterType="java.lang.String" resultMap="OrderByUserResultMap">
		select user.user_id,user.user_name,
		order.order_id,order.order_price,order.product_amount,order.order_create_time,order.order_finish_time
		order.is_active,order.is_common,
		product.product_id,product.product_name,product.product_price,
		company.company_id,company.company_name
		from user
		left join (order left join (product left join company 
				on product.product_company_id=company.company_id)
			on order.order_product_id=product.product_id)
		on user.user_id=order.order_user_id
		where user.user_id=#{user_id}
	</select>
	
	<select id="findorderbycompany_idDao" parameterType="java.lang.String" resultMap="OrderByCompanyResultMap">
		select user.user_id,user.user_name,
		order.order_id,order.order_price,order.product_amount,order.order_create_time,order.order_finish_time
		order.is_active,order.is_common,
		product.product_id,product.product_name,product.product_price,
		company.company_id,company.company_name
		from company
		left join (product left join (order left join user on user.user_id=order.order_user_id)
			on order.order_product_id=product.product_id)						 
			on product.product_company_id=company.company_id
		where company.company_id=#{company_id}
	</select>
	
	
</mapper>